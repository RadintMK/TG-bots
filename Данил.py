from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = Bot(token='8026739943:AAGdNaTZFtX43nkfZiCTvy2VgeHHZukvSbM')
dp = Dispatcher(bot)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton('üîß –£—Å–ª—É–≥–∏'))
    keyboard.add(KeyboardButton('üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è'))
    keyboard.add(KeyboardButton('‚ÑπÔ∏è –û –Ω–∞—Å'), KeyboardButton('üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'))
    return keyboard

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É—Å–ª—É–≥
def get_services_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', callback_data='service_diagnostic'),
        InlineKeyboardButton('–†–µ–º–æ–Ω—Ç –¥–≤–∏–≥–∞—Ç–µ–ª—è', callback_data='service_engine'),
        InlineKeyboardButton('–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞', callback_data='service_oil'),
        InlineKeyboardButton('–†–µ–º–æ–Ω—Ç —Ö–æ–¥–æ–≤–æ–π', callback_data='service_suspension'),
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back_to_main')
    )
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AutoService Bot!\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:",
        reply_markup=get_main_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–£—Å–ª—É–≥–∏"
@dp.message_handler(lambda message: message.text == "üîß –£—Å–ª—É–≥–∏")
async def show_services(message: types.Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —É—Å–ª—É–≥—É:",
        reply_markup=get_services_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –Ω–∞—Å"
@dp.message_handler(lambda message: message.text == "‚ÑπÔ∏è –û –Ω–∞—Å")
async def about_us(message: types.Message):
    await message.answer(
        "üè¢ –ù–∞—à –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 2010 –≥–æ–¥–∞.\n"
        "‚úÖ –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥ –ø–æ —Ä–µ–º–æ–Ω—Ç—É –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.\n"
        "üë®‚Äçüîß –£ –Ω–∞—Å —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã.\n"
        "‚ö°Ô∏è –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –≤—Å–µ –≤–∏–¥—ã —Ä–∞–±–æ—Ç."
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ö–æ–Ω—Ç–∞–∫—Ç—ã"
@dp.message_handler(lambda message: message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts(message: types.Message):
    await message.answer(
        "üìç –ê–¥—Ä–µ—Å: —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 123\n"
        "üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67\n"
        "üïê –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ü–ù-–í–° 9:00-21:00\n"
        "üìß Email: info@autoservice.com"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
@dp.message_handler(lambda message: message.text == "üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
async def book_service(message: types.Message):
    await message.answer(
        "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É:\n"
        "1. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è\n"
        "2. –£–∫–∞–∂–∏—Ç–µ –º–∞—Ä–∫—É –∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è\n"
        "3. –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É\n"
        "4. –£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è\n\n"
        "–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫ —É—Å–ª—É–≥
@dp.callback_query_handler(lambda c: c.data.startswith('service_'))
async def process_service_callback(callback_query: types.CallbackQuery):
    service_info = {
        'service_diagnostic': {
            'name': '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞',
            'description': '–ü–æ–ª–Ω–∞—è –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
            'price': '–æ—Ç 1000 ‚ÇΩ'
        },
        'service_engine': {
            'name': '–†–µ–º–æ–Ω—Ç –¥–≤–∏–≥–∞—Ç–µ–ª—è',
            'description': '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç –¥–≤–∏–≥–∞—Ç–µ–ª—è –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏',
            'price': '–æ—Ç 15000 ‚ÇΩ'
        },
        'service_oil': {
            'name': '–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞',
            'description': '–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤',
            'price': '–æ—Ç 800 ‚ÇΩ'
        },
        'service_suspension': {
            'name': '–†–µ–º–æ–Ω—Ç —Ö–æ–¥–æ–≤–æ–π',
            'description': '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ä–µ–º–æ–Ω—Ç –ø–æ–¥–≤–µ—Å–∫–∏',
            'price': '–æ—Ç 2000 ‚ÇΩ'
        }
    }
    
    service = service_info.get(callback_query.data)
    if service:
        await callback_query.message.edit_text(
            f"üìå {service['name']}\n"
            f"üìù {service['description']}\n"
            f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {service['price']}\n\n"
            "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é",
            reply_markup=get_services_keyboard()
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@dp.callback_query_handler(lambda c: c.data == 'back_to_main')
async def process_back_callback(callback_query: types.CallbackQuery):
    await callback_query.message.delete()
    await callback_query.message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:",
        reply_markup=get_main_keyboard()
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)